@keyframes transparency {
    0% {
        filter: opacity(0);
    }
    50% {
        filter: opacity(1);
    }
    100% {
        filter: opacity(0);
    }
}

@keyframes wiggle {
    from {
        transform: rotate(0);
    }
    to {
        transform: rotate(360deg);
    }
}

#flare-container {
    position: fixed;
    display: flex;
    justify-content: center;

    inset: 0;
    z-index: -1;

    overflow: hidden;

    background: linear-gradient(95deg, #2f2945, #1f1e27);
}

#flare-container:before {
    content: "";

    position: absolute;
    width: 100%;
    height: 100%;
}

#flare-container:before {
    background: linear-gradient(134deg, #1f1b2d, #201673);
    animation: 10s transparency infinite;
}

#flare-container-inner {
    width: 100%;
    max-width: 1280px;
    height: 100%;
    flex-grow: 1;

    position: relative;
}

.flare-transform {
    position: absolute;
    top: var(--t);
    left: var(--l);
    transform: translate(-50%, -50%);

    mix-blend-mode: screen;
}

.flare {
    position: relative;
    width: var(--s);
    height: var(--s);

    --bg: linear-gradient(var(--angle), var(--bg1), var(--bg2));

    animation: var(--speed) wiggle infinite linear var(--direction);
    transform-origin: 40% 50%;

    border-radius: 50%;
}

.flare-background, .flare-border:after {
    width: 100%;
    height: 100%;
    border-radius: 50%;
}

/* grain, background */
.flare-background {
    position: absolute;

    /* cancel animation rotation */
    animation: var(--speed) wiggle infinite linear var(--other-direction);

    background: var(--bg);

    filter: blur(var(--b1)) opacity(var(--o1));
}

/* border */
.flare-border {
    position: absolute;

    --offset: calc(0px - var(--b1));
    --size: calc(var(--s) + var(--b1)*2);
    transform: translate(var(--offset), var(--offset));
    width: var(--size);
    height: var(--size);

    filter: blur(var(--b1)) opacity(var(--o2));
}

.flare-border:after {
    content: "";
    display: block;

    background: var(--bg);
    --cutoff: calc(var(--s)*.5 - var(--b1));
    mask-image: radial-gradient(circle, transparent var(--cutoff), black var(--cutoff));
    mask-size: cover;
}
